blueprint:
  name: Double Switch Sync (Improved)
  description: |
    ## Double Switch Sync v2.0.0

    Sync the on/off state of two switches, ensuring that when one switch is turned on or off, the other one follows without creating loops. This avoids retriggering and works with any switches that support `homeassistant.turn_on` and `homeassistant.turn_off` services.

    ### Requirements
    * Both switches MUST support `homeassistant.turn_on` and `homeassistant.turn_off`.
    * Home Assistant 2022.5.0 or newer is required.
  domain: automation
  homeassistant:
    min_version: 2022.5.0

  input:
    switch_1:
      name: First Switch
      description: "First switch entity (e.g., tasmota_17_1)"
      selector:
        entity:
          domain: switch
    switch_2:
      name: Second Switch
      description: "Second switch entity (e.g., tasmota_17_2)"
      selector:
        entity:
          domain: switch

mode: queued
max_exceeded: silent

variables:
  switches:
    - !input "switch_1"
    - !input "switch_2"

trigger:
  - platform: state
    entity_id: !input "switch_1"
  - platform: state
    entity_id: !input "switch_2"

condition:
  # Check if the state actually changed
  - condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"

  # Ensure the new state is either 'on' or 'off'
  - condition: template
    value_template: '{{ (trigger.to_state.state == "on") or (trigger.to_state.state == "off") }}'

  # Prevent retriggering if the state change was caused by the same automation
  - condition: template
    value_template: "{{ trigger.to_state.context.parent_id is none or (trigger.to_state.context.id != this.context.id and trigger.to_state.context.parent_id != this.context.id) }}"

action:
  # Toggle the other switch based on the new state of the triggering switch
  - service: homeassistant.turn_{{ trigger.to_state.state }}
    # - service: homeassistant.turn_on
    # - service: switch.turn_{{ trigger.to_state.state }}
    target:
      entity_id: >
        {{ expand(switches) | selectattr('entity_id', '!=', trigger.entity_id) | map(attribute='entity_id') | list }}
